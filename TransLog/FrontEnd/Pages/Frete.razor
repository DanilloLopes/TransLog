@page "/frete"
@using FrontEnd.Models.Response
@using FrontEnd.Models.Request

<h3>Frete</h3>
<EditForm Model="_freteRequest" OnSubmit="PrecoFrete">
    <DataAnnotationsValidator/>
    <div class="row md-2">
        <div class="col-4">
            <label>Distâcia do frete</label>
            <InputNumber @bind-Value="_freteRequest.Distancia" class="form-control" />
            <ValidationMessage For="() => _freteRequest.Distancia" />
        </div>
        <div class="col-4">
            <label>Peso da Carga</label>
            <InputNumber @bind-Value="_freteRequest.Peso" class="form-control" />
            <ValidationMessage For="() => _freteRequest.Distancia" />
        </div>
        <div class="col-4">
            <label>Altura Caixa</label>
            <InputNumber @bind-Value="_freteRequest.Altura" class="form-control" />
            <ValidationMessage For="() => _freteRequest.Distancia" />
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <label>Comrpimento Caixa</label>
            <InputNumber @bind-Value="_freteRequest.Comprimento" class="form-control" />
            <ValidationMessage For="() => _freteRequest.Distancia" />
        </div>
        <div class="col-4">
            <label>Largura Caixa</label>
            <InputNumber @bind-Value="_freteRequest.Largura" class="form-control" />
            <ValidationMessage For="() => _freteRequest.Distancia" />
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-outline-primary mt-2">Gerar Preco</button>
        </div>
    </div>
</EditForm>

@if (exibirFrete)
{
    
    <p>O valor do frete é: @_freteResponse.CustoFrete</p>

}


@code {
    private FreteRequest _freteRequest { get; set; } = new();
    private FreteResponse _freteResponse { get; set; } = new();
    private bool exibirFrete = false;

    private async Task PrecoFrete()
    {
        var apiUrl = $"https://localhost:7284/Frete/freteObter?Altura={_freteRequest.Altura}&Largura{_freteRequest.Largura}&Comprimento={_freteRequest.Comprimento}&Distancia={_freteRequest.Distancia}&Peso={_freteRequest.Peso}";
        var http = new HttpClient();

        try
        {
            //faça um httpget para a api passando o nome e a data de nascimento o retorno é um objeto do tipo CarteirinhaResponse
            _freteResponse = await http.GetFromJsonAsync<FreteResponse>(apiUrl);

            //Verifica se existe um valor para a cor de fundo, se existir exibe a carteirinha
            if(_freteResponse.CustoFrete != 0)
            {
                exibirFrete = true;
            }
                
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}
